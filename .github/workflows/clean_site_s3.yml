name: Clean deployed s3 site after PR closed
on:
  pull_request:
    types: [closed]

env:
  BASE_NAME_BUCKET: corentin-ducatez-resume-bucket
  PR_REF_NAME: "${{ github.event.pull_request.number }}/merge"

jobs:
  terraform:
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2
      - name: Checkout files
        uses: actions/checkout@v3
      - name: Prepare tfvars file with needed variables
        run: |
          raw_bucket_name="${{ env.BASE_NAME_BUCKET }}-${{ env.PR_REF_NAME }}"
          echo "bucket_name=${raw_bucket_name////-}" >> $GITHUB_OUTPUT
          echo "aws_credential = {
              AWS_ACCESS_KEY_ID     = \"${{ secrets.AWS_ACCESS_KEY_ID }}\"
              AWS_SECRET_ACCESS_KEY = \"${{ secrets.AWS_SECRET_ACCESS_KEY }}\"
            }

          bucket_name = \"${raw_bucket_name////-}\"" > terraform/tmp_variables.tfvars
        id: tfvars_file
      - name: Init terraform
        run: terraform -chdir="terraform" init
        id: terraform_init
      - name: Try to import bucket if it does already exists (to prevent error)
        run: terraform -chdir="terraform" import -var-file "tmp_variables.tfvars" aws_s3_bucket.main_bucket "${{ steps.tfvars_file.outputs.bucket_name }}"
        continue-on-error: true
      - name: Terraform Apply (Prevent BucketNotEmpty error at destroy)
        run: terraform -chdir="terraform" apply -auto-approve -input=false -var-file "tmp_variables.tfvars"
      - name: Terraform destroy
        run: terraform -chdir="terraform" destroy -auto-approve -var-file "tmp_variables.tfvars"